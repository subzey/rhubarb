{
	"range": [
		0,
		54
	],
	"type": "Program",
	"body": [
		{
			"range": [
				0,
				54
			],
			"type": "IfStatement",
			"test": {
				"range": [
					4,
					29
				],
				"type": "CallExpression",
				"callee": {
					"range": [
						4,
						13
					],
					"type": "MemberExpression",
					"computed": false,
					"object": {
						"range": [
							4,
							8
						],
						"type": "Literal",
						"value": {},
						"raw": "/\\d/",
						"regex": {
							"pattern": "\\d",
							"flags": ""
						}
					},
					"property": {
						"range": [
							9,
							13
						],
						"type": "Identifier",
						"name": "test"
					}
				},
				"arguments": [
					{
						"range": [
							14,
							28
						],
						"type": "CallExpression",
						"callee": {
							"range": [
								14,
								24
							],
							"type": "MemberExpression",
							"computed": false,
							"object": {
								"range": [
									14,
									17
								],
								"type": "Identifier",
								"name": "obj"
							},
							"property": {
								"range": [
									18,
									24
								],
								"type": "Identifier",
								"name": "method"
							}
						},
						"arguments": [
							{
								"range": [
									25,
									27
								],
								"type": "Literal",
								"value": 42,
								"raw": "42"
							}
						]
					}
				]
			},
			"consequent": {
				"range": [
					30,
					54
				],
				"type": "BlockStatement",
				"body": [
					{
						"range": [
							34,
							51
						],
						"type": "ExpressionStatement",
						"expression": {
							"range": [
								34,
								50
							],
							"type": "CallExpression",
							"callee": {
								"range": [
									34,
									45
								],
								"type": "MemberExpression",
								"computed": false,
								"object": {
									"range": [
										34,
										41
									],
									"type": "Identifier",
									"name": "console"
								},
								"property": {
									"range": [
										42,
										45
									],
									"type": "Identifier",
									"name": "log"
								}
							},
							"arguments": [
								{
									"range": [
										46,
										49
									],
									"type": "BinaryExpression",
									"operator": "+",
									"left": {
										"range": [
											46,
											47
										],
										"type": "Literal",
										"value": 1,
										"raw": "1"
									},
									"right": {
										"range": [
											48,
											49
										],
										"type": "Literal",
										"value": 1,
										"raw": "1"
									}
								}
							]
						}
					}
				]
			},
			"alternate": null
		}
	]
}